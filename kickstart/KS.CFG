### ESXi Kickstart Script
### Hostname: NA
### Author: Dominic Chan
### Date: 2022-02-11
### Tested Patform Version: ESXi 6.7U3 and ESXi 7.0
### ESX Installation Use Case - Boot Menu Option 1
###	IP Addressing	- Static
###	Switch Type	- VSS
###	
### Addressed by Kickstart
###	Typical Kickstart - Clear Partition, Install to USB, Static IP / DNS assignment on vmk0, root password
###	Post Installation
###	  - Disable annoying first time CEIP pop-up
###	  - Add ESX local account
###	  - Enable local users to have full access to DCUI even if they don't have admin permssions on ESXi host
###	  - Enable & start SSH
###	  - Disable & stop ESXi Shell (TSM)
###	  - ESXi Shell interactive idle time logout
###	  - Suppress ESXi Shell warning
###	  - Copy SSH authorized keys & overwrite existing
###	  - NTP configuration
###	  - Set NTP to auto start
###	  - vSwitch configuration
###	     -- Creation
###	     -- Setting MTU and CDP
###	     -- Attach Uplinks
###	     -- Attach portgroups
###	     -- Configure NIC teaming
###	     -- Configure Load Balancing and failover
###	     -- Configure security
###	     -- Set traffic shaping
###	     -- VMKernel traffic tagging - (Future)
###	     -- Set VMkernal routes - (Future)
###	  - Disable IPV6
###	  - Enable ESX firewall and set firewall rules
###	  - Create local VM datastore - (edit require based on hardware)
###	  - Mount NFS datastore - (Future)
###	  - Advance NFS configuration (tweak)
###	  - Advance network configuration (tweak)
###	  - Syslog Configuration and rotation
###	  - Set shared VMTools location
###	  - Redirect Scatch Disk
###	  - Set Network Coredump location to VCSA
###	  - Assign VMware license
###	  - Enable maintaince mode
###
###  ____  _                      ___  _           ____             _           _        _ _       _   _               
### / ___|| |_ __ _  __ _  ___   / _ \/ |         |  _ \ _ __ ___  (_)_ __  ___| |_ __ _| | | __ _| |_(_) ___  _ __  _ 
### \___ \| __/ _` |/ _` |/ _ \ | | | | |  _____  | |_) | '__/ _ \ | | '_ \/ __| __/ _` | | |/ _` | __| |/ _ \| '_ \(_)
###  ___) | || (_| | (_| |  __/ | |_| | | |_____| |  __/| | |  __/ | | | | \__ \ || (_| | | | (_| | |_| | (_) | | | |_ 
### |____/ \__\__,_|\__, |\___|  \___/|_|         |_|   |_|  \___| |_|_| |_|___/\__\__,_|_|_|\__,_|\__|_|\___/|_| |_(_)
###                 |___/                                                                                              
###  http://patorjk.com/software/taag/#p=testall&f=Big&t=
##### Stage 01 - Pre installation:
	# Accept the VMware End User License Agreement
	vmaccepteula

	# Set the root password for the DCUI and Tech Support Mode
	#
	# For generating encrypted pasword use:
	# openssl passwd -1 $ROOT_PASSWORD
	# How does this work? https://unix.stackexchange.com/a/174081
	# rootpw --iscrypted $1$fgJ5Imnx$XPCH6KFUC.39EFG7gMB4g0
	#
	# Validate with salt (inbetween "$1$" and "$"):
	# openssl passwd -1 -salt fgJ5Imnx $ROOT_PASSWORD
	# $1$fgJ5Imnx$XPCH6KFUC.39EFG7gMB4g0 # MATCHES!

	rootpw VMware123!

	# Clear VMFS partitions (if exist) on the USB drive
	# clearpart --firstdisk --overwritevmfs
	# clearpart --drives=/vmfs/devices/disks/mpx.vmhba33:C0:T0:L0 --overwritevmfs
	# clearpart --drives=usb
	# clearpart --drives=mpx.vmhba32:C0:T0:L0
	clearpart --alldrives --overwritevmfs

	# Install ESX on
	# Install on the first local disk available on machine
	# install --firstdisk --overwritevmfs

	# Install ESXi on the first (USB) disk, ignore any SSD and do not create a VMFS
	# install --ignoressd --firstdisk=usb --overwritevmfs --novmfsondisk

	# Install ESXi on the USB drive
	# install --drive=/vmfs/devices/disks/mpx.vmhba32:C0:T0:L0
	# install --firstdisk=usb --overwritevmfs
	install --drive=/vmfs/devices/disks/mpx.vmhba33:C0:T0:L0

	# Set the network to DHCP on the first network adapter
	# network --bootproto=dhcp --device=vmnic0 --hostname=esx01.tataoui.com --addvmportgroup=1
	network --bootproto=static --device=vmnic0 --ip=192.168.10.41 --netmask=255.255.255.0 --gateway=192.168.10.2 --hostname=esx01.tataoui.com --nameserver=192.168.30.2 --addvmportgroup=1

	# Set the keyboard
	keyboard 'US Default'

	# Reboot ESXi Host
	reboot --noeject

##### Stage 02 - Post installation:
	# Run the following command only on the firstboot
	# Open busybox and launch commands
	%firstboot --interpreter=busybox

	# Disable CEIP
	esxcli system settings advanced set --option=/UserVars/HostClientCEIPOptIn --int-value=2

	# Add ESX local account
	esxcli system account add --id=dwcadmin --password=VMware1! --password-confirmation=VMware1!

	# Enable local users to have full access to DCUI even if they don't have admin permssions on ESXi host
	# vim-cmd hostsvc/advopt/update DCUI.Access string root,dwcadmin

	# Enable & start SSH
	vim-cmd hostsvc/enable_ssh
	vim-cmd hostsvc/start_ssh

	# Disable & stop ESXi Shell (TSM)
	vim-cmd hostsvc/disable_esx_shell
	vim-cmd hostsvc/stop_esx_shell

	# ESXi Shell interactive idle time logout
	esxcli system settings advanced set --option=/UserVars/ESXiShellInteractiveTimeOut --int-value=3600

	# Suppress ESXi Shell warning
	esxcli system settings advanced set --option=/UserVars/SuppressShellWarning --int-value=1

	# Copy SSH authorized keys & overwrite existing
	# wget http://192.168.30.10/ESXKey/id_dsa.pub -O /etc/ssh/keys-root/authorized_keys

	# Setting DNS, DNS suffix, and FQDN for Dynamic IP setup
	HostName=$(hostname -s)
	SuffixDNS="tataoui.com"
	FQDN="${HostName}.${SuffixDNS}"
	#esxcli system hostname set --fqdn=${FQDN}
	#esxcli network ip dns search add --domain=${SuffixDNS}
	#esxcli network ip dns server add --server=192.168.30.2
	#esxcli network ip dns server add --server=192.168.30.3

	# NTP configuration
	echo "restrict default kod nomodify notrap noquerynopeer" >> /tmp/ntp.conf
	echo "restrict 127.0.0.1" >> /tmp/ntp.conf
	echo "server 0.us.pool.ntp.org" >> /tmp/ntp.conf
	echo "server 1.us.pool.ntp.org" >> /tmp/ntp.conf
	echo "echodriftfile /etc/ntp.drift" >> /tmp/ntp.conf
	cp -f /tmp/ntp.conf /etc/ntp.conf

	# Set NTP to auto start
	/sbin/chkconfig ntpd on

	# vSwitch configuration
	##########################################################################
	# vSwitch1 : Active->vmnic1 Standby->vmnic2
	#	failback: yes
	#	faildectection: link
	#       load balancing: portid
	#       notify switches: yes
	#       avg bw: 1000000 Kbps
	#       peak bw: 1000000 Kbps
	#       burst size: 819200 KBps
	#       allow forged transmits: yes
	#       allow mac change: no
	#       allow promiscuous no
	#       cdp status: both
	#
	# vSS="vSwitch1"
	# vUPlink1="vmnic1"
	# vUPlink2="vmnic2"
	# vMTU="9000"
	# vCDP="Listen"
	# PG_MGMT="Management Network2"
	# VMK0_IP=192.168.10.41

	# Add Virutal Switch - vSwitch1
	# esxcli network vswitch standard add --ports 256 --vswitch-name ${vSS}

	# Configure vSwitch MTU and CDP (Cisco Discovery Protocol)
	# CDP options - Listen, Advertise, Both, None
	# esxcli network vswitch standard set --mtu=${vMTU} --cdp-status=${vCDP} --vswitch-name=${vSS}

	# Attach vmnic1,vmnic2 to vSwitch1 as Uplinks
	# esxcli network vswitch standard uplink add --uplink-name=${vUPlink1} --vswitch-name=${vSS}
	# esxcli network vswitch standard uplink add --uplink-name=${vUPlink2} --vswitch-name=${vSS}

	# Configure portgroup
	# esxcli network vswitch standard portgroup add --portgroup-name=VMNetwork1 --vswitch-name=${vSS}
	# esxcli network vswitch standard portgroup set --portgroup-name=VMNetwork1 --vlan-id=100
	# esxcli network vswitch standard portgroup add --portgroup-name=VMNetwork2 --vswitch-name=${vSS}
	# esxcli network vswitch standard portgroup set --portgroup-name=VMNetwork2 --vlan-id=200

	# Configure NIC Teaming - active and standby uplinks for vSwitch1
	# esxcli network vswitch standard policy failover set --active-uplinks ${vUPlink1} --standby-uplinks ${vUPlink2} --vswitch-name ${vSS}
 
	# Configure NIC Teaming - load balancing and failover detection
	# Load Balancing options - iphash, mac, portid, explicit
	# Failover Detection options - link, beacon
	# esxcli network vswitch standard policy failover set --failback=yes --failure-detection=link --load-balancing=portid --notify-switches=yes --vswitch-name=${vSS}
 
	# Security configuration
	# esxcli network vswitch standard policy security set --allow-forged-transmits=yes --allow-mac-change=yes --allow-promiscuous=no --vswitch-name=${vSS}
 
	# Traffic shaping configuration
	# Bandwidth in KB/sec, burst size measure in (b) Bytes
	# esxcli network vswitch standard policy shaping set --enabled=true --avg-bandwidth=100000 --peak-bandwidth=100000 --burst-size=819200 --vswitch-name=${vSS}
	# esxcli network vswitch standard policy shaping set --enabled=false --vswitch-name=${vSS}

	# Post VMkernel ports configuration
	#esxcli network ip interface add --interface-name=vmk0 --mtu=1500 --portgroup-name=${PG_MGMT}
	#esxcli network ip interface ipv4 set --interface-name=vmk0 --ipv4=${VMK0_IP} --netmask=255.255.255.0 --type=static
	#esxcli network ip interface tag add -i vmk0 -t Management
	
	########################################################################################################
	# Reserved for Future - DO NOT USED YET
	#
	# Configure portgroup
	# esxcli network vswitch standard portgroup add --portgroup-name=NFS --vswitch-nameme=${vSS}
	# esxcli network vswitch standard portgroup add --portgroup-name=FT_VMOTION --vswitch-nameme=${vSS}
	# esxcli network vswitch standard portgroup add --portgroup-name=VSPHERE_REPLICATION --vswitch-nameme=${vSS}
	#
	# configure vmkernel interface for NFS traffic, FT_VMOTION and VSPHERE_REPLICATION traffic
	# VMK0_IPADDR=$(esxcli network ip interface ipv4 get | grep vmk0 | awk '{print $2}')
	# VMK1_IPADDR=$(echo ${VMK0_IPADDR} | awk '{print $1".51."$3"."$4}' FS=.)
	# VMK2_IPADDR=10.10.0.2
	# VMK3_IPADDR=10.20.0.2
	# esxcli network ip interface add --interface-name vmk1 --mtu 9000 --portgroup-name="NFS"
	# esxcli network ip interface ipv4 set --interface-name vmk1 --ipv4=${VMK1_IPADDR} --netmask=255.255.255.0 --type=static
	# esxcli network ip interface add --interface-name vmk2 --mtu 9000 --portgroup-name="FT_VMOTION"
	# esxcli network ip interface ipv4 set --interface-name vmk2 --ipv4=${VMK2_IPADDR} --netmask=255.255.255.0 --type=static
	# esxcli network ip interface add --interface-name vmk3 --mtu 9000 --portgroup-name="VSPHERE_REPLICATION"
	# esxcli network ip interface ipv4 set --interface-name vmk3 --ipv4=${VMK3_IPADDR} --netmask=255.255.255.0 --type=static
 	#
	# Configure VMkernel Services - traffic type tagging 
	# Options are - VMotion, vSphereProvisioning, faultToleranceLogging, Management, vSphereReplication, vSphereReplicationNFC
	#
	# esxcli network ip interface tag add -i vmk2 -t Management
	# esxcli network ip interface tag add -i vmk2 -t VMotion
	# esxcli network ip interface tag add -i vmk2 -t faultToleranceLogging
	# esxcli network ip interface tag add -i vmk3 -t vSphereReplication
 	#
	# Configure VMkernel routes
	# esxcli network ip route ipv4 add --network=10.20.183/24 --gateway=172.30.0.1
	# esxcli network ip route ipv4 add --network=110.20.182/24 --gateway=172.30.0.1
	########################################################################################################

	# Disable ipv6
	esxcli network ip set --ipv6-enabled=0 

	# Enable ESX firewall and Allow all of its essential services
	esxcli network firewall set --default-action=false --enabled=yes
	FIREWALL_SERVICES="syslog sshClient ntpClient updateManager httpClient netdump"
	for SERVICE in ${FIREWALL_SERVICES}
	do
 	  esxcli network firewall ruleset set --ruleset-id=${SERVICE} --enabled=yes
	done

	# rename local datastore to something more meaningful (currently disabled because of --novmfsondisk)
	# vim-cmd hostsvc/datastore/rename datastore1 "Local - $(hostname -s)"

	PHYSICAL_DRIVES="SATA_SSD-SSD_VM Samsung-SSD_VSAN HITACHI-HDD_VSAN HGST-HDD_VSAN"
	for DRIVES in ${PHYSICAL_DRIVES}
	do
	  Drive=$(echo $DRIVES | cut -f1 -d-) 
	  DSLabel=$(echo $DRIVES | cut -f2 -d-)
	  NAA="$(ls /vmfs/devices/disks/ |grep -E ${Drive})"
	  END_SECTOR=$(eval expr $(partedUtil getptbl "/vmfs/devices/disks/${NAA}" | tail -1 | awk '{print $1 " \\* " $2 " \\* " $3}') - 1)
	  partedUtil setptbl "/vmfs/devices/disks/${NAA}" "gpt" "1 2048 ${END_SECTOR} AA31E02A400F11DB9590000C2911D1B8 0"
	  vmkfstools -C vmfs6 -b 1m -S ${DSLabel} "/vmfs/devices/disks/${NAA}:1"
	done

	# Create local VM datastore on Samsung EVO - VMFS6 format, mark it as SSD
	# NAA="$(ls /vmfs/devices/disks/ |grep -E 'Samsung')"
	# END_SECTOR=$(eval expr $(partedUtil getptbl "/vmfs/devices/disks/${NAA}" | tail -1 | awk '{print $1 " \\* " $2 " \\* " $3}') - 1)
	# partedUtil setptbl "/vmfs/devices/disks/${NAA}" "gpt" "1 2048 ${END_SECTOR} AA31E02A400F11DB9590000C2911D1B8 0"
	# vmkfstools -C vmfs6 -b 1m -S SSD_VM "/vmfs/devices/disks/${NAA}:1"
	# esxcli storage nmp satp rule add -s VMW_SATP_LOCAL -d ${NAA} -o enable_ssd
	# esxcli storage core claiming reclaim -d ${NAA}

	# Mount NFS datastore
	# esxcli storage nfs add --host "nfs.${SuffixDNS}" --share /share1 --volume-name=NFSShare

	# Advance NFS configuration
	#
	# Time in seconds between heartbeats
	esxcli system settings advanced set --option=/NFS/HeartbeatFrequency --int-value=20
	# Number of sequential failures before a volume is marked down
	esxcli system settings advanced set --option=/NFS/HeartbeatMaxFailures --int-value=10
	# Time in seconds before an outstanding heartbeat is stopped
	esxcli system settings advanced set --option=/NFS/HeartbeatTimeout --int-value=10
	# Maximum number of mounted NFS v3 volumes
	esxcli system settings advanced set --option=/NFS/MaxVolumes --int-value=128

	# Advance network configuration
	#
	# Max megabytes the tcpip module heap can grow to
	esxcli system settings advanced set --option=/Net/TcpipHeapMax --int-value=120
	# Size of the TCP/IP module heap in megabytes
	esxcli system settings advanced set --option=/Net/TcpipHeapSize --int-value=30

	# Syslog Configuration and rotation
	# esxcli system syslog config set --default-rotate=20 --loghost=${VCSAIP}:514
 	#
	# Change the individual syslog rotation count
	# esxcli system syslog config logger set --id=hostd --rotate=20 --size=2048
	# esxcli system syslog config logger set --id=vmkernel --rotate=20 --size=2048
	# esxcli system syslog config logger set --id=fdm --rotate=20
	# esxcli system syslog config logger set --id=vpxa --rotate=20

	# Set shared VMTools location
	# esxcli system settings advanced set --option=/UserVars/ProductLockerLocation --string-value="/vmfs/volumes/NFSShare/productLocker"

	# Redirect Scatch Disk
	# ScratchDir="Scratch"
	# DataStore=""
	# mkdir /vmfs/volumes/${DataStore}/${vScratchDir}
	# mkdir
	# esxcli system settings advanced set --option=/ScratchConfig.ConfiguredScratchLocation --string-value="/vmfs/volumes/${DataStore}/${vScratchDir}/.locker-${HostName}"
	# cd /vmfs/volumes/Datastore01
	# mkdir Scratch
	# cd Scratch
	# mkdir .locker-esx01

	# Set Network Coredump location to VCSA
	VCSAIP="192.168.10.40"
	esxcli system coredump network set --interface-name=vmk0 --server-ipv4=${VCSAIP} --server-port=6500
	esxcli system coredump network set --enable true

	# Assign VMware license
	# vim-cmd vimsvc/license --set=AAAAA-BBBBB-CCCCC-DDDDD-EEEEE

	# Enable maintaince mode
	esxcli system maintenanceMode set --enable=true
 
	# Copy %firstboot script logs to persistent datastore
	# cp /var/log/hostd.log "/vmfs/volumes/${DataStore}/first-boot-hostd.log"
	# cp /var/log/esxi_install.log "/vmfs/volumes/${ataStore}/first-boot-install.log"

	# restart for the last time
	# reboot
	esxcli system shutdown reboot --delay=15 --reason="Rebooting after ESXi host configuration"
